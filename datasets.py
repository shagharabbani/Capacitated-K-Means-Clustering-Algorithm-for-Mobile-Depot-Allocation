import torch
import matplotlib.pyplot as plt

def dataset1():
    dataset = torch.tensor([[0.292900997807455,0.851297717361631],
[0.291663840878239,0.832930423324426],
[0.290065615279158,0.828503657676944],
[0.292045474031946,0.830316972656402],
[0.290137243379566,0.838424022513597],
[0.290399539688394,0.824930176430331],
[0.288348186719021,0.834317249302765],
[0.294788542495838,0.823009832161058],
[0.292116954805695,0.821996644005136],
[0.291473149663538,0.847064316947611],
[0.323214121418411,0.647820131210435],
[0.328947793200282,0.701579851517742],
[0.361364031799031,0.607658086887304],
[0.320546139185963,0.665745121226981],
[0.323212352742812,0.637578818563583],
[0.343432878992606,0.622192334720139],
[0.308327382413088,0.611137190711807],
[0.337496843298963,0.633534504900743],
[0.263523818251836,0.659764625479179],
[0.297109721349554,0.656350105309718],
[0.0765174763164264,0.8487594287021],
[0.0570537501273844,0.889505913115078],
[0.0565764195848872,0.878839144664688],
[0.075182117822218,0.853875642612046],
[0.079569740134857,0.826353912264478],
[0.0564806593789007,0.861772336825202],
[0.0747052743179859,0.858569165064025],
[0.0806202997060144,0.855799442729583],
[0.0853910245779113,0.843212688818291],
[0.0679307245353338,0.861557373547321],
[0.0932445707946297,0.783038341935443],
[0.0774773148718946,0.777064517074248],
[0.0667905039745283,0.775785293575],
[0.0767135012558172,0.759995048723495],
[0.108010163875325,0.761266681869154],
[0.0986614587380586,0.79412932446198],
[0.098278354945764,0.773219054794348],
[0.0858748721686212,0.793705938393451],
[0.0893325763998923,0.785331957896714],
[0.0934592621193151,0.783838339889329],
[0.98108919742736,0.959892161020999],
[0.996938250387956,0.955599587312307],
[0.99273337866174,0.924883538913215],
[0.988905544707896,0.86344787220046],
[1,0.993996958290707],
[0.958388537065967,1],
[0.985468651497897,0.852357673843828],
[0.971162909003646,0.978239443340302],
[0.987574202562757,0.897611585338727],
[0.975507825309929,0.984081502062738],
[0.709856524123269,0.902552317761405],
[0.724351875216387,0.87011003237701],
[0.753379027680545,0.934916288443691],
[0.716711567572604,0.841109031705056],
[0.704515401577185,0.912797653958587],
[0.691534136136173,0.89233365950579],
[0.697638559810875,0.882088114975589],
[0.725756827855634,0.935154039741777],
[0.701330716511977,0.853239992857653],
[0.721047790955544,0.858587730562506],
[0.532355268489206,0.909169442809637],
[0.508302246186633,0.846883021473898],
[0.498376798632841,0.81019085412058],
[0.500663734392302,0.755574014562738],
[0.480820066252492,0.763258372776224],
[0.491886578409933,0.753869445774318],
[0.523276933637928,0.855998299674123],
[0.525470607797549,0.774338429361663],
[0.509064032121781,0.90406042420034],
[0.530055221557938,0.797393250838215],
[0.0080404502218147,0.721666336815108],
[0.00571477205389923,0.708343289567352],
[0.00287829899228109,0.70161794869886],
[0.00951631615819663,0.697685827015725],
[0.00209067119521203,0.694569246812547],
[0.00904029385397023,0.694720916995103],
[0.0105921782747601,0.692759330234867],
[0.00836609792082988,0.668162475578454],
[0,0.666803272609293],
[0.0148430282813498,0.674047981380893],
[0.00916808471299854,0.466037869580977],
[0.000962289127936762,0.460914604895885],
[0.0137489375292095,0.501048907986384],
[0.0272955401602621,0.430169533748331],
[0.0227149791186607,0.408395054368569],
[0.0280595107838183,0.444259357577674],
[0.0181366271363785,0.447250189559914],
[0.0398906953265434,0.441693919626397],
[0.0286313399112623,0.431023134891821],
[0.0169928792399469,0.487385438425221],
[0.122098878440011,0.612938764843704],
[0.124256345412507,0.590602990620447],
[0.116700415122189,0.594227307972989],
[0.124255779889302,0.582151876886487],
[0.116699022389148,0.568270341729135],
[0.124526167161472,0.589999243548639],
[0.126144203156205,0.573700052645041],
[0.115890827639887,0.594227536797287],
[0.114541030222462,0.584569516484879],
[0.123715077577072,0.567060760987428]])

    pos_depot_xy = torch.tensor([[0.103506813199231,0.514926022985988],
[0.102357896108167,0.512172571229263],
[0.406733426833199,0.639155208672704],
[0.297455409829204,0.49251435289218],
[0.283644198066799,0.299535435405055],
[0.214313280035689,0.798374602762623],
[0.176199859642612,0.122345637546076],
[0.246378625047527,0.57664275015354],
[0.450040946543035,0],
[0.731105121928589,0.834538816756049]])

    demand = torch.tensor([0.134560467755396,
0.16624856285,
0.063388276513646,
0.151415144,
0.0848815333333333,
0.1521821144,
0.305572399585783,
0.162152,
0.181192,
0.146130555833029,
0.398233946877629,
0.399599973388841,
0.0801298699863087,
0.0861986556036443,
0.170290872011914,
0.276890751040228,
0.0668064947648916,
0.139308027621027,
0.156460807025015,
0.134727971796745,
0.120770704347826,
0.0765513420637958,
0.0273390176698901,
0.132150966791198,
0.071944803793448,
0.149949005836957,
0.052448930762843,
0.119106956521739,
0.137323211104084,
0.0705521739130435,
0.171613475227635,
0.0533786956521739,
0.139657695652174,
0.118569565217391,
0.144729347826087,
0.0750971463043478,
0.107997272173913,
0.106141304347826,
0.10395922826087,
0.0405357314130435,
0.142982296,
0.249522847255694,
0.0693798222036716,
0.218440001689316,
0.381798879475921,
0.133575495109813,
0.14541,
0.293329725351524,
0.0618178,
0.276483873173478,
0.0218532141112653,
0.1309725133295,
0.13054543,
0.165222972147023,
0.399761112094526,
0.391673190221367,
0.03031430696,
0.05109828,
0.387189435351366,
0.285712443744242,
0.1818268,
0.224544321,
0.15476546,
0.310028056194088,
0.16750304,
0.12548785,
0.16498096,
0.1154867854,
0.1546475,
0.381828,
0.189148788391304,
0.19,
0.192310671936759,
0.192709805984517,
0.111247395195665,
0.179426645689891,
0.0988142292490119,
0.180547826086957,
0.158343218120415,
0.229858373573876,
0.175488131140048,
0.181669815995826,
0.122738729559147,
0.363315150171806,
0.35899936097878,
0.273664446141101,
0.0941729536831405,
0.0206260684594656,
0.16987496,
0.19938,
0.157271657698909,
0.380906665431531,
0.113915685040606,
0.177419078706768,
0.14350612,
0.341573125005106,
0.294190697904281,
0.0874230501292932,
0.18758984,
0.100040333901658])

    return dataset,pos_depot_xy,demand

def dataset2():
    torch.manual_seed(1)
    datasetf=torch.normal(5.0,0.5,size=[15,2])
    datasets=torch.normal(10.0,0.4,size=[15,2])
    dataset=torch.cat((datasetf,datasets),0)
    depot_xy1=torch.tensor([[4.0,3.0],[9.0,9.0],[8.0,12.0],[5.0,6.0]])
    demand=torch.rand(30)
    return dataset,depot_xy1,demand

def dataset4():
    torch.manual_seed(1)
    datasetx1=torch.normal(3.0,1.2,size=[140,1])
    datasety1=torch.normal(10.0,1.2,size=[140,1])
    datasetcat1=torch.cat((datasetx1,datasety1),1)

    datasets=torch.normal(9.0,1.05,size=[140,2])

    datasetx2=torch.normal(10.0,1.25,size=[70,1])
    datasety2=torch.normal(3.0,1.25,size=[70,1])
    datasetcat2=torch.cat((datasetx2,datasety2),1)

    datasetss=torch.normal(3.0,1.0,size=[150,2])
    dataset=torch.cat((datasetcat1,datasets,datasetcat2,datasetss),0)
    depot_xy1=torch.tensor([[4.0,3.0],[9.0,9.0],[8.0,12.0],[5.0,6.0],[2.0,2.0],[10.0,4.0],[3.0,7.0],[7.0,8.0],[4.0,10.0],[0.0,8.0],[12.0,10.0]])
    demand=torch.rand(500)/2.5
    return dataset,depot_xy1,demand

def dataset3():
    torch.manual_seed(3)
    dataset=torch.rand(10,2)
    pos_depot_xy=torch.rand(4,2)
    demand=torch.rand(10)
    return dataset,pos_depot_xy,demand

if __name__ == "__main__":
    dataset, depot_xy, demand = dataset2()
    fig, ax = plt.subplots()
    ax.plot(dataset[:,0],dataset[:,1],'o')
    ax.plot(depot_xy[:,0],depot_xy[:,1],'s',markerfacecolor='none',markersize=10)
    for i in range(dataset.shape[0]):
        ax.annotate(str(demand[i].data),  xy=(dataset[i,0], dataset[i,1]),
                fontsize="large",
                horizontalalignment='center',
                verticalalignment='center')


    plt.show()
